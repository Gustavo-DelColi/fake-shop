#----------------Deployment do Banco de Dados Postgres----------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgre
spec:
  #seleciona labels declaradas no metadata  
  selector: 
    #regra de selecao da label
    matchLabels:
      app: postgre
  #template do pod
  template: 
    # nao declara de novo, vai se dinamico
    metadata: 
      labels:
        #precisa mesmo name do metadata
        app: postgre 
    #especifica o pod, menor objeto do cluster, onde estao os containers
    spec: 
      # declara o container do pod, um para cada pod
      containers:
        # nome do container dentro meu pod
        - name: postgre
          # nome da imagem criado do container
          image: postgres:13.16 
          ports:
            # mesma porta do Postgres
            - containerPort: 5432
           #variaveis de ambiente
          env:
          - name: POSTGRES_DB
            value: fakeshop
          - name: POSTGRES_USER
            value: fakeshop
          - name: POSTGRES_PASSWORD
            value: Pg1234
---
apiVersion: v1
kind: Service
metadata:
  name: postgre
spec:
  selector:
    app: postgre
  ports:
    - port: 5432
      targetPort: 5432
---

#----------------Deployment da Aplicação web----------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fakeshop
spec:
  # numero de replicas do
  replicas: 4
  #seleciona labels declaradas no metadata  
  selector: 
    #regra de selecao da label
    matchLabels:
      app: fakeshop
  #template do pod
  template: 
    # nao declara de novo, vai se dinamico
    metadata: 
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '5000'
        prometheus.io/path: '/metrics'
      labels:
        #precisa mesmo name do metadata
        app: fakeshop 
    #especifica o pod, menor objeto do cluster, onde estao os containers
    spec: 
      # declara o container do pod, um para cada pod
      containers:
        # nome do container dentro meu pod
        - name: fakeshop
          # nome da imagem criado do container
          image: gustavodelcoli/fake-shop:v1 
          ports:
            # mesma porta do Dockerfile
            - containerPort: 5000
           #variaveis de ambiente
          env:
          - name: DB_HOST
            value: postgre
          - name: DB_USER
            value: fakeshop
          - name: DB_PASSWORD
            value: Pg1234
          - name: DB_NAME
            value: fakeshop
          - name: FLASK_APP
            value: index.py
---
apiVersion: v1
kind: Service
metadata:
  name: fakeshop
spec:
  selector:
    app: fakeshop
  ports:
    - port: 80
      targetPort: 5000
  type: LoadBalancer
---